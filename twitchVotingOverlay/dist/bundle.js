!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var o=function(){function e(){this.handlers=[]}return e.prototype.addEventListener=function(e){this.handlers.push(e)},e.prototype.removeEventListener=function(e){this.handlers=this.handlers.filter((function(t){return t!==e}))},e.prototype.dispatch=function(e){this.handlers.slice(0).forEach((function(t){return t(e)}))},e}(),i=function(){function e(e){this.WS=null,this.createEvent=new o,this.endEvent=new o,this.noVoteRoundEvent=new o,this.updateEvent=new o,this.URL=e,this.onSocketClose=this.onSocketClose.bind(this),this.onSocketError=this.onSocketError.bind(this),this.onSocketMessage=this.onSocketMessage.bind(this),this.onSocketOpen=this.onSocketOpen.bind(this),this.connect()}return e.prototype.addCreateVoteListener=function(e){this.createEvent.addEventListener(e)},e.prototype.addEndVoteListener=function(e){this.endEvent.addEventListener(e)},e.prototype.addNoVotingRoundListener=function(e){this.noVoteRoundEvent.addEventListener(e)},e.prototype.addUpdateVoteListener=function(e){this.updateEvent.addEventListener(e)},e.prototype.removeCreateVoteListener=function(e){this.createEvent.removeEventListener(e)},e.prototype.removeNoVotingRoundListener=function(e){this.noVoteRoundEvent.removeEventListener(e)},e.prototype.removeEndVoteListener=function(e){this.endEvent.removeEventListener(e)},e.prototype.removeUpdateVoteListener=function(e){this.updateEvent.removeEventListener(e)},e.prototype.connect=function(){try{this.WS=new WebSocket(this.URL),this.WS.addEventListener("close",this.onSocketClose),this.WS.addEventListener("error",this.onSocketError),this.WS.addEventListener("message",this.onSocketMessage),this.WS.addEventListener("open",this.onSocketOpen)}catch(e){}},e.prototype.onSocketError=function(e){console.log("error in socket occurred: "+e.message+". closing socket"),null!==this.WS&&this.WS.close()},e.prototype.onSocketClose=function(){var t=this;console.log("socket closed, reconnecting in "+e.RECONNECT_INTERVAL+"ms"),window.setTimeout((function(){return t.connect()}),e.RECONNECT_INTERVAL)},e.prototype.onSocketMessage=function(e){try{var t=JSON.parse(e.data);switch(t.request){case"CREATE":this.createEvent.dispatch(t);break;case"END":this.endEvent.dispatch(t);break;case"NO_VOTING_ROUND":this.noVoteRoundEvent.dispatch(t);break;case"UPDATE":this.updateEvent.dispatch(t);break;default:console.warn("unknown request type: "+t.request)}}catch(e){console.error("failed to parse json data: "+e)}},e.prototype.onSocketOpen=function(){console.log("successfully connected to websocket")},e.RECONNECT_INTERVAL=1e3,e}(),r=function(){function e(e){this._isAnimating=!1,this.container=e,this.bar=document.createElement("div"),this.barProgression=document.createElement("div"),this.labelContainer=document.createElement("div"),this.labelLabel=document.createElement("span"),this.labelMatch=document.createElement("span"),this.labelValue=document.createElement("span"),this.bar.classList.add("bar"),this.barProgression.classList.add("progression"),this.labelContainer.classList.add("labelContainer"),this.labelContainer.append(this.labelMatch,this.labelLabel,this.labelValue),this.bar.append(this.barProgression),this.bar.append(this.labelContainer),this.container.append(this.bar)}return Object.defineProperty(e.prototype,"label",{set:function(e){this.labelLabel.innerText=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"match",{set:function(e){this.labelMatch.innerText=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"value",{set:function(e){this.labelValue.innerText=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{set:function(e){this.barProgression.style.width=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isAnimating",{get:function(){return this._isAnimating},enumerable:!1,configurable:!0}),e.prototype.fadeIn=function(e,t){void 0===t&&(t=0),this.bar.style.animationDelay=t+"ms",this.bar.style.animationDuration=e+"ms",this.bar.classList.add("slideIn"),this.bar.classList.remove("slideOut")},e.prototype.fadeOut=function(e,t){void 0===t&&(t=0),this.bar.style.animationDelay=t+"ms",this.bar.style.animationDuration=e+"ms",this.bar.classList.add("slideOut"),this.bar.classList.remove("slideIn")},e}(),s=function(){function e(e,t){this.bars=[],this.container=e,this.onCreateVote=this.onCreateVote.bind(this),this.onEndVote=this.onEndVote.bind(this),this.onUpdateVote=this.onUpdateVote.bind(this),t.addCreateVoteListener(this.onCreateVote),t.addEndVoteListener(this.onEndVote),t.addUpdateVoteListener(this.onUpdateVote)}return e.prototype.onCreateVote=function(){this.bars.forEach((function(e,t){var n=100*t;e.fadeOut(600,n),setTimeout((function(){return e.fadeIn(600)}),600+n)}))},e.prototype.onEndVote=function(){},e.prototype.onUpdateVote=function(e){var t=this,n=e.totalVotes,o=e.voteOptions,i=e.votingMode;if(o.length!==this.bars.length){for(;this.container.firstChild;)this.container.removeChild(this.container.firstChild);this.bars=o.map((function(e,n){return new r(t.container)}))}for(var s=0;s<o.length;s++){var a=this.bars[s],c=o[s];if(!a.isAnimating){var l=0;l=0===c.value?0:Math.floor(c.value/n*100),a.label=c.label,a.match=c.matches.join("/").concat("."),"MAJORITY"===i?a.value=c.value.toString():"PERCENTAGE"===i&&(a.value=l+"%"),a.width=l+"%"}}},e}(),a=document.getElementById("barContainer"),c=document.getElementById("totalVotes");if(null===a)throw new Error("could not find bar container in DOM");if(null===c)throw new Error("could not find total votes element in DOM");var l=new i("ws://localhost:9091");l.addUpdateVoteListener((function(e){c.innerText="Total Votes: "+e.totalVotes})),new s(a,l)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,